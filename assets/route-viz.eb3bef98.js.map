{"version":3,"file":"route-viz.eb3bef98.js","sources":["../../src/route-viz/main.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { MAP_STYPE_ROUTE, MAPBOX_TOKEN, STOPS_DATA } from \"../utils/constants\";\nimport mapboxgl from \"mapbox-gl\";\nimport { getRoutesGeojson } from \"../utils\";\n\nmapboxgl.accessToken = MAPBOX_TOKEN;\n\nconst getLineGeoJson = (points) => ({\n  type: \"geojson\",\n  data: {\n    type: \"FeatureCollection\",\n    features: [\n      {\n        type: \"Feature\",\n        geometry: {\n          type: \"LineString\",\n          coordinates: (points || []).map((p) => [p.lng, p.lat]),\n        },\n      },\n    ],\n  },\n});\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: STOPS_DATA.majestic.loc[0],\n      lng: STOPS_DATA.majestic.loc[1],\n      zoom: 11,\n      points: [],\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initMap();\n    this.map.on(\"load\", () => {\n      this.map.addSource(\"route\", getRoutesGeojson([]));\n      this.map.addLayer({\n        id: \"route\",\n        source: \"route\",\n        type: \"line\",\n        paint: {\n          \"line-color\": \"#4264fb\",\n          \"line-width\": 8,\n        },\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { points } = this.state;\n    if (prevState.points !== points) {\n      const routeSource = this.map.getSource(\"route\");\n      routeSource.setData(getLineGeoJson(points).data);\n    }\n  }\n\n  initMap = () => {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n      minZoom: 10,\n      maxZoom: 18,\n    });\n    map.dragRotate.disable();\n    map.touchZoomRotate.disableRotation();\n\n    map.getCanvas().style.cursor = \"crosshair\";\n\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2),\n      });\n    });\n    map.on(\"click\", (e) => {\n      this.setState({\n        points: [...this.state.points, e.lngLat],\n      });\n    });\n    this.map = map;\n  };\n\n  render() {\n    const { points } = this.state;\n    return (\n      <div id=\"route-viz-wrapper\">\n        <div id=\"route-viz-map\" ref={this.mapContainer} />\n        <div id=\"route-viz-info\">\n          <h3>Route</h3>\n          {points.length === 0 ? (\n            <p>Click on a point on the map to add to the route</p>\n          ) : (\n            <>\n              <button>Copy</button>\n              <div id=\"route-viz-points\">\n                {points.map((p, index) => (\n                  <div key={index}>\n                    {p.lng.toFixed(6)}, {p.lat.toFixed(6)}\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<Container />);\n"],"names":["mapboxgl","MAPBOX_TOKEN","getLineGeoJson","points","p","Container","React.Component","props","__publicField","lng","lat","zoom","map","e","STOPS_DATA","React.createRef","getRoutesGeojson","prevProps","prevState","snapshot","React.createElement","React.Fragment","index","root","createRoot"],"mappings":"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"}